openapi: "3.0.0"
info:
  version: 1.0.0
  title: HomeNet
  description: |
    listings of properties for sale
  license:
    name: MIT
servers:
- url: http://localhost:3000
paths:
  /listings/{location}:
    /listings/{Adress}:
    get:
      summary: Lists all listings
      operationId: listListings
      tags:
      - listings
      responses:
        '200':
          description: Array of listings
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/ResponseListings"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"components:
      
    post:
       summary: create a property
       opererationID: createProperty
       tags:
       -property
       requestBody:
         description: the property to  create
         required: true
         content:
           application/json:
              schema:
                $ref: "#/components/schemas/Listing" 
        responses:
        '201':
          description: OK
          content:
            application/json:
              schema: 
              $ref: "#components/schema/responseListings"     
        default:
        description: unexpected error
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Error"   
 /listings/{listingId}:
    get:
          summary: Info on specific property
          operationId: getPropertyById
          parameters: 
          - name: propertyId
            in: path
            description: Property ID
            required: true
            schema:
              type: string
              format: int64
          tags:
          - properties
          responses:
            '200':
              description: Show one property
              content:
                application/json:    
                  schema:
                    $ref: "#/components/schemas/ResponseProperties"
            default:
              description: unexpected error
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/Error"  
      patch:
          summary: Updating specific property
          operationId: updateProperty
          parameters:
          - name: PropertyId
            in: path
            description: property ID
            required: true
            schema:
              type: string
              format: int64
          tags:
          - properties
          requestBody:
            description: the property to update
            required: true
            content:
              application/json:    
                schema:
                  $ref: "#/components/schemas/listing"
          responses:
            '201':
              description: req.param upserted
              content:
                application/json:    
                  schema:
                    $ref: "#/components/schemas/ResponseListing"
            '200':
              description: OK
              content:
                application/json:    
                  schema:
                    $ref: "#/components/schemas/ResponseListing" 
            '204':
              description: No content
                application/json:    
                  schema:
                    $ref: "#/components/schemas/ResponseListing"              
            default:
              description: unexpected error
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/Error"
    delete:
          summary: Delete specific property
          operationId: deleteProperty
          parameters:
          - name: propertyId
            in: path
            description: Property ID
            required: true
            schema:
              type: string
              format: int64 
          tags:
          - properties
          responses:
            '200':
              description: deleted
              content:
                application/json:    
                  schema:
                    $ref: "#/components/schemas/ResponseListing"
            '204':
                description: Cant find id
                  application/json:    
                    schema:
                      $ref: "#/components/schemas/Error"                 
            default:
              description: unexpected error
              content:
                application/json:
                  schema:
                    $ref: "#/components/schemas/Error"
  schemas:
    Listing:
      type: object
      properties:
        Adress: 
          type: string
        Location:
          type: string
        Author:
          type: string
        Price:
          type: number
        MonthlyFee: 
          type: number
        Type:
          type: string
        Coordinate:
          type: object
          properties:
             Longitude: 
              type: number
            Latitude:
              type: number
# Add properties for your listings here  V 
    ResponseListing:
      allOf:
      - $ref: "#/components/schemas/Listing"
      - properties:
          __v:
            type: integer
            format: uint32
          _id:
            type: string
            format: uuid
    ResponseListings:
      type: array
      items:
        $ref: "#/components/schemas/ResponseListing"
    Error:
      required:
        - error
      properties:
        error:
          type: object
          properties:
            expose:
              type: boolean
            statusCode:
              type: integer
              format: uint32
            status:
              type: integer
              format: uint32
            body:
              title: body as escaped json
              type: string
            type:
              title: fault desciption
              type: string
